# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Main Workflow
on: [push, pull_request]

jobs:
  code_style:
    name: Code Style Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pylint
          pip install pylint-ignore
      - name: Pylint
        run: |
          pylint-ignore --rcfile=.pylintrc *.py wapitiCore

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Build
        run: |
          docker build .

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
    services:
      mysqldb:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: wapiti
          MYSQL_DATABASE: wapiti
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgresdb:
        image: postgres
        env:
          POSTGRES_PASSWORD: wapiti
          POSTGRES_DB: wapiti
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health-check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install php7.4-cli php7.4-xml -y --no-install-recommends
        python -m pip install --upgrade pip
        pip install -U setuptools cython
    - name: Test project
      run: |
        python setup.py test -vv
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
