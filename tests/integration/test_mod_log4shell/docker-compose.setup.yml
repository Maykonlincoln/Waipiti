version: '3.9'

# Following the DRY philosophy
x-default_php_setup:
  &default_php_setup
  image: php${PHP_HASH}
  networks:
    - test-network

x-healthcheck_web:
  &healthcheck_web
  healthcheck:
    test: ${DEFAULT_WEB_HEALTHCHECK_COMMAND}
    interval: ${DEFAULT_HEALTHCHECKS_INTERVAL}
    timeout: ${DEFAULT_HEALTHCHECKS_TIMEOUT}
    start_period: ${DEFAULT_HEALTHCHECKS_START_PERIOD}
    retries: ${DEFAULT_HEALTHCHECKS_RETRIES}

x-default_mysql_setup:
  &default_mysql_setup
  image: mysql${MYSQL_HASH}
  networks:
    - test-network

x-healthcheck_mysql:
  &healthcheck_mysql
  healthcheck:
    test: ${DEFAULT_MYSQL_HEALTHCHECK_COMMAND}
    start_period: ${DEFAULT_HEALTHCHECKS_START_PERIOD}
    interval: ${DEFAULT_HEALTHCHECKS_INTERVAL}
    timeout: ${DEFAULT_HEALTHCHECKS_TIMEOUT}
    retries: ${DEFAULT_HEALTHCHECKS_RETRIES}

services:
  # Apache container for the log4shell module
  log4shell:
    build:
      context: ./test_mod_log4shell/tomcat/
      dockerfile: Dockerfile.tomcat
      args:
        TOMCAT_HASH_TAG: ${TOMCAT_TAG}
    healthcheck:
      test: "nc -z localhost 80"
      interval: ${DEFAULT_HEALTHCHECKS_INTERVAL}
      timeout: ${DEFAULT_HEALTHCHECKS_TIMEOUT}
      retries: ${DEFAULT_HEALTHCHECKS_RETRIES}
      start_period: ${DEFAULT_HEALTHCHECKS_START_PERIOD}
    networks:
      - test-network

  unifi:
    image: jacobalberty/unifi:v6.5.53
    volumes:
      - ./test_mod_log4shell/unifi.system.properties:/unifi/data/system.properties
    healthcheck:
      test: [ "CMD", "/usr/local/bin/docker-healthcheck.sh" ]
      interval: ${DEFAULT_HEALTHCHECKS_INTERVAL}
      timeout: ${DEFAULT_HEALTHCHECKS_TIMEOUT}
      retries: ${DEFAULT_HEALTHCHECKS_RETRIES}
      start_period: ${DEFAULT_HEALTHCHECKS_START_PERIOD}
    networks:
      - test-network

  dns-endpoint:
    build:
      context: ./dns-endpoint
      dockerfile: Dockerfile.dns-endpoint
    healthcheck:
      test: [ "CMD", "ruby", "/usr/local/bin/healthcheck.rb" ]
      interval: ${DEFAULT_HEALTHCHECKS_INTERVAL}
      timeout: ${DEFAULT_HEALTHCHECKS_TIMEOUT}
      retries: ${DEFAULT_HEALTHCHECKS_RETRIES}
      start_period: ${DEFAULT_HEALTHCHECKS_START_PERIOD}
    networks:
      - test-network

  # Wapiti container 
  # requires all the targets containers to work perfectly
  wapiti:
    build:
      context: "../../"
      dockerfile: "./tests/integration/wapiti/Dockerfile.integration"
      no_cache: true
    container_name: wapiti
    volumes:
      - ./.test:/home/
    networks:
      - test-network
    command: "${TESTS}"
    depends_on:
      log4shell:
        condition: service_healthy
      unifi:
        condition: service_healthy
      dns-endpoint:
        condition: service_healthy

networks:
  test-network:
